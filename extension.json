{
	"name": "CheckUser",
	"version": "2.5-twiki.1",
	"author": [
		"Tim Starling",
		"Aaron Schulz",
		"Ryan Schmidt"
	],
	"url": "https://www.mediawiki.org/wiki/Extension:CheckUser",
	"descriptionmsg": "checkuser-desc",
	"license-name": "GPL-2.0-or-later",
	"type": "specialpage",
	"requires": {
		"MediaWiki": ">= 1.35.0",
		"platform": {
			"ext-openssl": "*"
		}
	},
	"ExtensionMessagesFiles": {
		"CheckUserAliases": "CheckUser.alias.php"
	},
	"config": {
		"CheckUserCIDRLimit": {
			"value": {
				"IPv4": 16,
				"IPv6": 19
			},
			"description": "Shortest CIDR limits that can be checked in any individual range check"
		},
		"CheckUserMaxBlocks": {
			"value": 200,
			"description": "Maximum number of users that can be mass blocked simultaneously"
		},
		"CheckUserMaxBlocksLimited": {
			"value": 5,
			"description": "Maximum number of users that can be mass blocked simultaneously for users without full access"
		},
		"CUPublicKey": {
			"value": "",
			"description": "Public key to encrypt private data that may need to be read later. Generate a public key with something like: `openssl genrsa -out cu.key 2048; openssl rsa -in cu.key -pubout > cu.pub` and paste the contents of cu.pub here."
		},
		"CUDMaxAge": {
			"value": 7776000,
			"description": "How long to keep CheckUser data (in seconds)"
		},
		"CheckUserForceSummary": {
			"value": false,
			"description": "Whether to force checkusers into giving a reason for each check they do through Special:CheckUser."
		},
		"CheckUserCAMultiLock": {
			"value": false,
			"description": "Whether to add a link to Special:MultiLock by CentralAuth to the Special:CheckUser's mass block form. This requires CentralAuth extension to be installed on the wiki. To enable this, set this to an array with a central wiki's database name and an array with the name(s) of the global group(s) to add the link for. Example: [ 'centralDB' => 'metawiki', 'groups' => [ 'steward' ] ]"
		},
		"CheckUserCAtoollink": {
			"value": false,
			"description": "Whether to add links to CentralAuth in Special:CheckUser results"
		},
		"CheckUserGBtoollink": {
			"value": false,
			"description": "Whether to add links for globally blocking accounts shown in Special:CheckUser results"
		},
		"CheckUserLogLogins": {
			"value": false,
			"description": "Whether login attempts should be logged in CheckUser logs"
		},
		"CheckUserEnableSpecialInvestigate": {
			"value": false,
			"description": "Enables Special:Investigate"
		},
		"CheckUserLogAdditionalRights": {
			"value": [],
			"description": "Additional rights to be used when adding CheckUser log entries"
		},
		"CheckUserMaximumRowCount": {
			"value": 5000,
			"description": "Maximum number of rows in cu_changes to be used in any query"
		}
	},
	"APIListModules": {
		"checkuser": "ApiQueryCheckUser",
		"checkuserlog": "ApiQueryCheckUserLog"
	},
	"Hooks": {
		"RecentChange_save": [
			"CheckUserHooks::updateCheckUserData",
			"CheckUserHooks::maybePruneIPData"
		],
		"EmailUser": "CheckUserHooks::updateCUEmailData",
		"User::mailPasswordInternal": "CheckUserHooks::updateCUPasswordResetData",
		"LocalUserCreated": "CheckUserHooks::onLocalUserCreated",
		"UserMergeAccountFields": "CheckUserHooks::onUserMergeAccountFields",
		"RenameUserSQL": "CheckUserHooks::onRenameUserSQL",
		"ParserTestTables": "CheckUserHooks::checkUserParserTestTables",
		"LoadExtensionSchemaUpdates": "CheckUserHooks::onLoadExtensionSchemaUpdates",
		"ContributionsToolLinks": "CheckUserHooks::checkUserContributionsLinks",
		"PerformRetroactiveAutoblock": "CheckUserHooks::doRetroactiveAutoblock",
		"AuthManagerLoginAuthenticateAudit": "CheckUserHooks::onAuthManagerLoginAuthenticateAudit",
		"SpecialPage_initList": "CheckUserHooks::onSpecialPage_initList",
		"UserGetAllRights": "CheckUserHooks::onUserGetAllRights"
	},
	"MessagesDirs": {
		"CheckUser": [
			"i18n",
			"i18n/api"
		]
	},
	"ResourceModules": {
		"ext.checkUser": {
			"scripts": [
				"modules/ext.checkuser.cidr.js",
				"modules/ext.checkuser.caMultiLock.js"
			],
			"dependencies": [
				"mediawiki.util"
			],
			"messages": [
				"checkuser-centralauth-multilock"
			]
		},
		"ext.checkUser.investigate.styles": {
			"styles": [
				"modules/ext.checkuser.investigate.less"
			]
		},
		"ext.checkUser.investigate": {
			"packageFiles": [
				"modules/ext.checkuser.investigate.init.js",
				"modules/ext.checkuser.investigate.tables.js",
				"modules/ext.checkuser.investigate.copy.js",
				{
					"name": "modules/message.json",
					"callback": "MediaWiki\\CheckUser\\ToolLinksMessages::getParsedMessage",
					"callbackParam": "checkuser-investigate-compare-toollinks"
				}
			],
			"dependencies": [
				"jquery.tablesorter",
				"oojs-ui-widgets",
				"oojs-ui.styles.icons-content",
				"oojs-ui.styles.icons-editing-core",
				"oojs-ui.styles.icons-interactions",
				"oojs-ui.styles.icons-moderation",
				"mediawiki.storage",
				"mediawiki.Uri",
				"mediawiki.widgets"
			],
			"messages": [
				"checkuser-investigate-compare-copy-button-label",
				"checkuser-investigate-compare-copy-message-label",
				"checkuser-investigate-compare-table-button-add-ip-targets-label",
				"checkuser-investigate-compare-table-button-add-user-targets-label",
				"checkuser-investigate-compare-table-button-filter-label"
			]
		},
		"ext.checkUser.investigateblock.styles": {
			"styles": [
				"modules/ext.checkuser.investigateblock.less"
			]
		},
		"ext.checkUser.investigateblock": {
			"packageFiles": [
				"modules/ext.checkuser.investigateblock.js"
			],
			"dependencies": [
				"oojs-ui-widgets"
			]
		}
	},
	"ResourceFileModulePaths": {
		"localBasePath": "",
		"remoteExtPath": "CheckUser"
	},
	"GroupPermissions": {
		"checkuser": {
			"checkuser": true,
			"checkuser-log": true
		}
	},
	"AvailableRights": [
		"checkuser",
		"checkuser-log",
		"checkuser-limited"
	],
	"SpecialPages": {
		"CheckUser": "SpecialCheckUser",
		"CheckUserLog": "SpecialCheckUserLog"
	},
	"AutoloadClasses": {
		"CheckUserHooks": "includes/CheckUserHooks.php",
		"CheckUserLogPager": "includes/CheckUserLogPager.php",
		"SpecialCheckUser": "includes/specials/SpecialCheckUser.php",
		"SpecialCheckUserLog": "includes/specials/SpecialCheckUserLog.php",
		"CheckUserEncryptedData": "includes/CheckUserEncryptedData.php",
		"ApiQueryCheckUser": "includes/api/ApiQueryCheckUser.php",
		"ApiQueryCheckUserLog": "includes/api/ApiQueryCheckUserLog.php",
		"PopulateCheckUserTable": "maintenance/populateCheckUserTable.php"
	},
	"ServiceWiringFiles": [
		"includes/ServiceWiring.php"
	],
	"AutoloadNamespaces": {
		"MediaWiki\\CheckUser\\": "src/"
	},
	"TestAutoloadNamespaces": {
		"MediaWiki\\CheckUser\\Test\\": "tests/phpunit/"
	},
	"load_composer_autoloader": true,
	"manifest_version": 2
}
